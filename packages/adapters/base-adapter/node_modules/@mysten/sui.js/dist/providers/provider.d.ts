import { GetObjectDataResponse, SuiObjectInfo, GatewayTxSeqNumber, GetTxnDigestsResponse, TransactionResponse } from '../types';
export declare abstract class Provider {
    /**
     * Get all objects owned by an address
     */
    abstract getObjectsOwnedByAddress(addressOrObjectId: string): Promise<SuiObjectInfo[]>;
    /**
     * Get details about an object
     */
    abstract getObject(objectId: string): Promise<GetObjectDataResponse>;
    /**
     * Get transaction digests for a given range
     *
     * NOTE: this method may get deprecated after DevNet
     */
    abstract getTransactionDigestsInRange(start: GatewayTxSeqNumber, end: GatewayTxSeqNumber): Promise<GetTxnDigestsResponse>;
    /**
     * Get the latest `count` transactions
     *
     * NOTE: this method may get deprecated after DevNet
     */
    abstract getRecentTransactions(count: number): Promise<GetTxnDigestsResponse>;
    /**
     * Get total number of transactions
     * NOTE: this method may get deprecated after DevNet
     */
    abstract getTotalTransactionNumber(): Promise<number>;
    abstract executeTransaction(txnBytes: string, signature: string, pubkey: string): Promise<TransactionResponse>;
}
