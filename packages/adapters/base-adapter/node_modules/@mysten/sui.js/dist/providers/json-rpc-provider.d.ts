import { Provider } from './provider';
import { GatewayTxSeqNumber, GetTxnDigestsResponse, GetObjectDataResponse, SuiObjectInfo, TransactionDigest, TransactionEffectsResponse, TransactionResponse } from '../types';
export declare class JsonRpcProvider extends Provider {
    endpoint: string;
    private client;
    /**
     * Establish a connection to a Sui Gateway endpoint
     *
     * @param endpoint URL to the Sui Gateway endpoint
     */
    constructor(endpoint: string);
    getObjectsOwnedByAddress(address: string): Promise<SuiObjectInfo[]>;
    getObjectsOwnedByObject(objectId: string): Promise<SuiObjectInfo[]>;
    getObject(objectId: string): Promise<GetObjectDataResponse>;
    getObjectBatch(objectIds: string[]): Promise<GetObjectDataResponse[]>;
    getTransactionsForObject(objectID: string): Promise<GetTxnDigestsResponse>;
    getTransactionsForAddress(addressID: string): Promise<GetTxnDigestsResponse>;
    getTransactionWithEffects(digest: TransactionDigest): Promise<TransactionEffectsResponse>;
    getTransactionWithEffectsBatch(digests: TransactionDigest[]): Promise<TransactionEffectsResponse[]>;
    executeTransaction(txnBytes: string, signature: string, pubkey: string): Promise<TransactionResponse>;
    getTotalTransactionNumber(): Promise<number>;
    getTransactionDigestsInRange(start: GatewayTxSeqNumber, end: GatewayTxSeqNumber): Promise<GetTxnDigestsResponse>;
    getRecentTransactions(count: number): Promise<GetTxnDigestsResponse>;
}
