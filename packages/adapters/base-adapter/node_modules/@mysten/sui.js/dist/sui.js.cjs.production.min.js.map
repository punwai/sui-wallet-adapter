{"version":3,"file":"sui.js.cjs.production.min.js","sources":["../src/serialization/base64.ts","../src/cryptography/publickey.ts","../src/cryptography/ed25519-keypair.ts","../src/providers/provider.ts","../node_modules/regenerator-runtime/runtime.js","../src/index.guard.ts","../src/rpc/client.guard.ts","../src/rpc/client.ts","../src/providers/json-rpc-provider.ts","../src/serialization/hex.ts","../src/signers/txn-data-serializers/rpc-txn-data-serializer.ts","../src/providers/void-provider.ts","../src/signers/signer-with-provider.ts","../src/signers/raw-signer.ts","../src/types/common.ts","../src/types/objects.ts","../src/types/transactions.ts","../src/types/framework.ts"],"sourcesContent":["// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Buffer } from 'buffer';\n\nexport class Base64DataBuffer {\n  private data: Uint8Array;\n\n  constructor(data: Uint8Array | string) {\n    if (typeof data === 'string') {\n      this.data = new Uint8Array(Buffer.from(data, 'base64'));\n    } else {\n      this.data = data;\n    }\n  }\n\n  getData(): Uint8Array {\n    return this.data;\n  }\n\n  getLength(): number {\n    return this.data.length;\n  }\n\n  toString(): string {\n    return Buffer.from(this.data).toString('base64');\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport { sha3_256 } from 'js-sha3';\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nexport const PUBLIC_KEY_SIZE = 32;\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-64 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        const buffer = Buffer.from(value, 'base64');\n        if (buffer.length !== 32) {\n          throw new Error(\n            `Invalid public key input. Expected 32 bytes, got ${buffer.length}`\n          );\n        }\n        this._bn = new BN(buffer);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_SIZE) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-64 representation of the public key\n   */\n  toBase64(): string {\n    return this.toBuffer().toString('base64');\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_SIZE) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(PUBLIC_KEY_SIZE);\n    b.copy(zeroPad, PUBLIC_KEY_SIZE - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-64 representation of the public key\n   */\n  toString(): string {\n    return this.toBase64();\n  }\n\n  /**\n   * Return the Sui address associated with this public key\n   */\n  toSuiAddress(): string {\n    const hexHash = sha3_256(this.toBytes());\n    const publicKeyBytes = new BN(hexHash, 16).toArray(undefined, 32);\n    // Only take the first 20 bytes\n    const addressBytes = publicKeyBytes.slice(0, 20);\n    return toHexString(addressBytes);\n  }\n}\n\n// https://stackoverflow.com/questions/34309988/byte-array-to-hex-string-conversion-in-javascript\nfunction toHexString(byteArray: number[]) {\n  return byteArray.reduce(\n    (output, elem) => output + ('0' + elem.toString(16)).slice(-2),\n    ''\n  );\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport nacl from 'tweetnacl';\nimport { Base64DataBuffer } from '../serialization/base64';\nimport { Keypair } from './keypair';\nimport { PublicKey } from './publickey';\nimport { TextEncoder } from 'util';\n\n/**\n * Ed25519 Keypair data\n */\nexport interface Ed25519KeypairData {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An Ed25519 Keypair used for signing transactions.\n */\nexport class Ed25519Keypair implements Keypair {\n  private keypair: Ed25519KeypairData;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519KeypairData) {\n    if (keypair) {\n      this.keypair = keypair;\n    } else {\n      this.keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Ed25519Keypair {\n    return new Ed25519Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: { skipValidation?: boolean }\n  ): Ed25519Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('sui validation');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Ed25519Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Ed25519Keypair {\n    return new Ed25519Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  getPublicKey(): PublicKey {\n    return new PublicKey(this.keypair.publicKey);\n  }\n\n  /**\n   * Return the signature for the provided data.\n   */\n  signData(data: Base64DataBuffer): Base64DataBuffer {\n    return new Base64DataBuffer(\n      nacl.sign.detached(data.getData(), this.keypair.secretKey)\n    );\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  GetObjectDataResponse,\n  SuiObjectInfo,\n  GatewayTxSeqNumber,\n  GetTxnDigestsResponse,\n  TransactionResponse,\n} from '../types';\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider {\n  // Objects\n  /**\n   * Get all objects owned by an address\n   */\n  abstract getObjectsOwnedByAddress(\n    addressOrObjectId: string\n  ): Promise<SuiObjectInfo[]>;\n\n  /**\n   * Get details about an object\n   */\n  abstract getObject(objectId: string): Promise<GetObjectDataResponse>;\n\n  // Transactions\n  /**\n   * Get transaction digests for a given range\n   *\n   * NOTE: this method may get deprecated after DevNet\n   */\n  abstract getTransactionDigestsInRange(\n    start: GatewayTxSeqNumber,\n    end: GatewayTxSeqNumber\n  ): Promise<GetTxnDigestsResponse>;\n\n  /**\n   * Get the latest `count` transactions\n   *\n   * NOTE: this method may get deprecated after DevNet\n   */\n  abstract getRecentTransactions(count: number): Promise<GetTxnDigestsResponse>;\n\n  /**\n   * Get total number of transactions\n   * NOTE: this method may get deprecated after DevNet\n   */\n  abstract getTotalTransactionNumber(): Promise<number>;\n\n  abstract executeTransaction(\n    txnBytes: string,\n    signature: string,\n    pubkey: string\n  ): Promise<TransactionResponse>;\n\n  // TODO: add more interface methods\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/*\n * Generated type guards for \"index.ts\".\n * WARNING: Do not manually change this file.\n */\nimport { Ed25519KeypairData, Keypair, PublicKeyInitData, PublicKeyData, TransferObjectTransaction, MergeCoinTransaction, SplitCoinTransaction, MoveCallTransaction, PublishTransaction, TxnDataSerializer, SignaturePubkeyPair, Signer, TransactionDigest, SuiAddress, ObjectOwner, SuiObjectRef, SuiObjectInfo, ObjectContentFields, MovePackageContent, SuiData, SuiMoveObject, SuiMovePackage, SuiObject, ObjectStatus, ObjectType, GetOwnedObjectsResponse, GetObjectDataResponse, ObjectDigest, ObjectId, SequenceNumber, TransferObject, SuiTransferSui, SuiChangeEpoch, TransactionKindName, SuiTransactionKind, TransactionData, EpochId, AuthorityQuorumSignInfo, CertifiedTransaction, GasCostSummary, ExecutionStatusType, ExecutionStatus, OwnedObjectRef, TransactionEffects, TransactionEffectsResponse, GatewayTxSeqNumber, GetTxnDigestsResponse, MoveCall, SuiJsonValue, EmptySignInfo, AuthorityName, AuthoritySignature, TransactionBytes, MergeCoinResponse, SplitCoinResponse, PublishResponse, SuiPackage, TransactionResponse } from \"./index\";\nimport { BN } from \"bn.js\";\nimport { Base64DataBuffer } from \"./serialization/base64\";\nimport { PublicKey } from \"./cryptography/publickey\";\n\nexport function isEd25519KeypairData(obj: any, _argumentName?: string): obj is Ed25519KeypairData {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj.publicKey instanceof Uint8Array &&\n        obj.secretKey instanceof Uint8Array\n    )\n}\n\nexport function isKeypair(obj: any, _argumentName?: string): obj is Keypair {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        typeof obj.getPublicKey === \"function\" &&\n        typeof obj.signData === \"function\"\n    )\n}\n\nexport function isPublicKeyInitData(obj: any, _argumentName?: string): obj is PublicKeyInitData {\n    return (\n        (isTransactionDigest(obj) as boolean ||\n            isSequenceNumber(obj) as boolean ||\n            obj instanceof Buffer ||\n            obj instanceof Uint8Array ||\n            Array.isArray(obj) &&\n            obj.every((e: any) =>\n                isSequenceNumber(e) as boolean\n            ) ||\n            isPublicKeyData(obj) as boolean)\n    )\n}\n\nexport function isPublicKeyData(obj: any, _argumentName?: string): obj is PublicKeyData {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj._bn instanceof BN\n    )\n}\n\nexport function isTransferObjectTransaction(obj: any, _argumentName?: string): obj is TransferObjectTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.objectId) as boolean &&\n        (typeof obj.gasPayment === \"undefined\" ||\n            isTransactionDigest(obj.gasPayment) as boolean) &&\n        isSequenceNumber(obj.gasBudget) as boolean &&\n        isTransactionDigest(obj.recipient) as boolean\n    )\n}\n\nexport function isMergeCoinTransaction(obj: any, _argumentName?: string): obj is MergeCoinTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.primaryCoin) as boolean &&\n        isTransactionDigest(obj.coinToMerge) as boolean &&\n        (typeof obj.gasPayment === \"undefined\" ||\n            isTransactionDigest(obj.gasPayment) as boolean) &&\n        isSequenceNumber(obj.gasBudget) as boolean\n    )\n}\n\nexport function isSplitCoinTransaction(obj: any, _argumentName?: string): obj is SplitCoinTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.coinObjectId) as boolean &&\n        Array.isArray(obj.splitAmounts) &&\n        obj.splitAmounts.every((e: any) =>\n            isSequenceNumber(e) as boolean\n        ) &&\n        (typeof obj.gasPayment === \"undefined\" ||\n            isTransactionDigest(obj.gasPayment) as boolean) &&\n        isSequenceNumber(obj.gasBudget) as boolean\n    )\n}\n\nexport function isMoveCallTransaction(obj: any, _argumentName?: string): obj is MoveCallTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.packageObjectId) as boolean &&\n        isTransactionDigest(obj.module) as boolean &&\n        isTransactionDigest(obj.function) as boolean &&\n        Array.isArray(obj.typeArguments) &&\n        obj.typeArguments.every((e: any) =>\n            isTransactionDigest(e) as boolean\n        ) &&\n        Array.isArray(obj.arguments) &&\n        obj.arguments.every((e: any) =>\n            isSuiJsonValue(e) as boolean\n        ) &&\n        (typeof obj.gasPayment === \"undefined\" ||\n            isTransactionDigest(obj.gasPayment) as boolean) &&\n        isSequenceNumber(obj.gasBudget) as boolean\n    )\n}\n\nexport function isPublishTransaction(obj: any, _argumentName?: string): obj is PublishTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        Array.isArray(obj.compiledModules) &&\n        obj.compiledModules.every((e: any) =>\n            isTransactionDigest(e) as boolean\n        ) &&\n        (typeof obj.gasPayment === \"undefined\" ||\n            isTransactionDigest(obj.gasPayment) as boolean) &&\n        isSequenceNumber(obj.gasBudget) as boolean\n    )\n}\n\nexport function isTxnDataSerializer(obj: any, _argumentName?: string): obj is TxnDataSerializer {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        typeof obj.newTransferObject === \"function\" &&\n        typeof obj.newMoveCall === \"function\" &&\n        typeof obj.newMergeCoin === \"function\" &&\n        typeof obj.newSplitCoin === \"function\" &&\n        typeof obj.newPublish === \"function\"\n    )\n}\n\nexport function isSignaturePubkeyPair(obj: any, _argumentName?: string): obj is SignaturePubkeyPair {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj.signature instanceof Base64DataBuffer &&\n        obj.pubKey instanceof PublicKey\n    )\n}\n\nexport function isSigner(obj: any, _argumentName?: string): obj is Signer {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        typeof obj.getAddress === \"function\" &&\n        typeof obj.signData === \"function\"\n    )\n}\n\nexport function isTransactionDigest(obj: any, _argumentName?: string): obj is TransactionDigest {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isSuiAddress(obj: any, _argumentName?: string): obj is SuiAddress {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isObjectOwner(obj: any, _argumentName?: string): obj is ObjectOwner {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isTransactionDigest(obj.AddressOwner) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isTransactionDigest(obj.ObjectOwner) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isTransactionDigest(obj.SingleOwner) as boolean ||\n            obj === \"Shared\" ||\n            obj === \"Immutable\")\n    )\n}\n\nexport function isSuiObjectRef(obj: any, _argumentName?: string): obj is SuiObjectRef {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.digest) as boolean &&\n        isTransactionDigest(obj.objectId) as boolean &&\n        isSequenceNumber(obj.version) as boolean\n    )\n}\n\nexport function isSuiObjectInfo(obj: any, _argumentName?: string): obj is SuiObjectInfo {\n    return (\n        isSuiObjectRef(obj) as boolean &&\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.type) as boolean &&\n        isObjectOwner(obj.owner) as boolean &&\n        isTransactionDigest(obj.previousTransaction) as boolean\n    )\n}\n\nexport function isObjectContentFields(obj: any, _argumentName?: string): obj is ObjectContentFields {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        Object.entries<any>(obj)\n            .every(([key, _value]) => (isTransactionDigest(key) as boolean))\n    )\n}\n\nexport function isMovePackageContent(obj: any, _argumentName?: string): obj is MovePackageContent {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        Object.entries<any>(obj)\n            .every(([key, value]) => (isTransactionDigest(value) as boolean &&\n                isTransactionDigest(key) as boolean))\n    )\n}\n\nexport function isSuiData(obj: any, _argumentName?: string): obj is SuiData {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isObjectType(obj.dataType) as boolean &&\n            isSuiMoveObject(obj) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isObjectType(obj.dataType) as boolean &&\n            isSuiMovePackage(obj) as boolean)\n    )\n}\n\nexport function isSuiMoveObject(obj: any, _argumentName?: string): obj is SuiMoveObject {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.type) as boolean &&\n        isObjectContentFields(obj.fields) as boolean &&\n        typeof obj.has_public_transfer === \"boolean\"\n    )\n}\n\nexport function isSuiMovePackage(obj: any, _argumentName?: string): obj is SuiMovePackage {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isMovePackageContent(obj.disassembled) as boolean\n    )\n}\n\nexport function isSuiObject(obj: any, _argumentName?: string): obj is SuiObject {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isSuiData(obj.data) as boolean &&\n        isObjectOwner(obj.owner) as boolean &&\n        isTransactionDigest(obj.previousTransaction) as boolean &&\n        isSequenceNumber(obj.storageRebate) as boolean &&\n        isSuiObjectRef(obj.reference) as boolean\n    )\n}\n\nexport function isObjectStatus(obj: any, _argumentName?: string): obj is ObjectStatus {\n    return (\n        (obj === \"Exists\" ||\n            obj === \"NotExists\" ||\n            obj === \"Deleted\")\n    )\n}\n\nexport function isObjectType(obj: any, _argumentName?: string): obj is ObjectType {\n    return (\n        (obj === \"moveObject\" ||\n            obj === \"package\")\n    )\n}\n\nexport function isGetOwnedObjectsResponse(obj: any, _argumentName?: string): obj is GetOwnedObjectsResponse {\n    return (\n        Array.isArray(obj) &&\n        obj.every((e: any) =>\n            isSuiObjectInfo(e) as boolean\n        )\n    )\n}\n\nexport function isGetObjectDataResponse(obj: any, _argumentName?: string): obj is GetObjectDataResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isObjectStatus(obj.status) as boolean &&\n        (isTransactionDigest(obj.details) as boolean ||\n            isSuiObjectRef(obj.details) as boolean ||\n            isSuiObject(obj.details) as boolean)\n    )\n}\n\nexport function isObjectDigest(obj: any, _argumentName?: string): obj is ObjectDigest {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isObjectId(obj: any, _argumentName?: string): obj is ObjectId {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isSequenceNumber(obj: any, _argumentName?: string): obj is SequenceNumber {\n    return (\n        typeof obj === \"number\"\n    )\n}\n\nexport function isTransferObject(obj: any, _argumentName?: string): obj is TransferObject {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.recipient) as boolean &&\n        isSuiObjectRef(obj.objectRef) as boolean\n    )\n}\n\nexport function isSuiTransferSui(obj: any, _argumentName?: string): obj is SuiTransferSui {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.recipient) as boolean &&\n        (obj.amount === null ||\n            isSequenceNumber(obj.amount) as boolean)\n    )\n}\n\nexport function isSuiChangeEpoch(obj: any, _argumentName?: string): obj is SuiChangeEpoch {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isSequenceNumber(obj.epoch) as boolean &&\n        isSequenceNumber(obj.storage_charge) as boolean &&\n        isSequenceNumber(obj.computation_charge) as boolean\n    )\n}\n\nexport function isTransactionKindName(obj: any, _argumentName?: string): obj is TransactionKindName {\n    return (\n        (obj === \"TransferObject\" ||\n            obj === \"Publish\" ||\n            obj === \"Call\" ||\n            obj === \"TransferSui\" ||\n            obj === \"ChangeEpoch\")\n    )\n}\n\nexport function isSuiTransactionKind(obj: any, _argumentName?: string): obj is SuiTransactionKind {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isTransferObject(obj.TransferObject) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isSuiMovePackage(obj.Publish) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isMoveCall(obj.Call) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isSuiTransferSui(obj.TransferSui) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isSuiChangeEpoch(obj.ChangeEpoch) as boolean)\n    )\n}\n\nexport function isTransactionData(obj: any, _argumentName?: string): obj is TransactionData {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        Array.isArray(obj.transactions) &&\n        obj.transactions.every((e: any) =>\n            isSuiTransactionKind(e) as boolean\n        ) &&\n        isTransactionDigest(obj.sender) as boolean &&\n        isSuiObjectRef(obj.gasPayment) as boolean &&\n        isSequenceNumber(obj.gasBudget) as boolean\n    )\n}\n\nexport function isEpochId(obj: any, _argumentName?: string): obj is EpochId {\n    return (\n        typeof obj === \"number\"\n    )\n}\n\nexport function isAuthorityQuorumSignInfo(obj: any, _argumentName?: string): obj is AuthorityQuorumSignInfo {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isSequenceNumber(obj.epoch) as boolean &&\n        Array.isArray(obj.signatures) &&\n        obj.signatures.every((e: any) =>\n            isTransactionDigest(e) as boolean\n        )\n    )\n}\n\nexport function isCertifiedTransaction(obj: any, _argumentName?: string): obj is CertifiedTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.transactionDigest) as boolean &&\n        isTransactionData(obj.data) as boolean &&\n        isTransactionDigest(obj.txSignature) as boolean &&\n        isAuthorityQuorumSignInfo(obj.authSignInfo) as boolean\n    )\n}\n\nexport function isGasCostSummary(obj: any, _argumentName?: string): obj is GasCostSummary {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isSequenceNumber(obj.computationCost) as boolean &&\n        isSequenceNumber(obj.storageCost) as boolean &&\n        isSequenceNumber(obj.storageRebate) as boolean\n    )\n}\n\nexport function isExecutionStatusType(obj: any, _argumentName?: string): obj is ExecutionStatusType {\n    return (\n        (obj === \"success\" ||\n            obj === \"failure\")\n    )\n}\n\nexport function isExecutionStatus(obj: any, _argumentName?: string): obj is ExecutionStatus {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isExecutionStatusType(obj.status) as boolean &&\n        (typeof obj.error === \"undefined\" ||\n            isTransactionDigest(obj.error) as boolean)\n    )\n}\n\nexport function isOwnedObjectRef(obj: any, _argumentName?: string): obj is OwnedObjectRef {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isObjectOwner(obj.owner) as boolean &&\n        isSuiObjectRef(obj.reference) as boolean\n    )\n}\n\nexport function isTransactionEffects(obj: any, _argumentName?: string): obj is TransactionEffects {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isExecutionStatus(obj.status) as boolean &&\n        isGasCostSummary(obj.gasUsed) as boolean &&\n        (typeof obj.sharedObjects === \"undefined\" ||\n            Array.isArray(obj.sharedObjects) &&\n            obj.sharedObjects.every((e: any) =>\n                isSuiObjectRef(e) as boolean\n            )) &&\n        isTransactionDigest(obj.transactionDigest) as boolean &&\n        (typeof obj.created === \"undefined\" ||\n            Array.isArray(obj.created) &&\n            obj.created.every((e: any) =>\n                isOwnedObjectRef(e) as boolean\n            )) &&\n        (typeof obj.mutated === \"undefined\" ||\n            Array.isArray(obj.mutated) &&\n            obj.mutated.every((e: any) =>\n                isOwnedObjectRef(e) as boolean\n            )) &&\n        (typeof obj.unwrapped === \"undefined\" ||\n            Array.isArray(obj.unwrapped) &&\n            obj.unwrapped.every((e: any) =>\n                isOwnedObjectRef(e) as boolean\n            )) &&\n        (typeof obj.deleted === \"undefined\" ||\n            Array.isArray(obj.deleted) &&\n            obj.deleted.every((e: any) =>\n                isSuiObjectRef(e) as boolean\n            )) &&\n        (typeof obj.wrapped === \"undefined\" ||\n            Array.isArray(obj.wrapped) &&\n            obj.wrapped.every((e: any) =>\n                isSuiObjectRef(e) as boolean\n            )) &&\n        isOwnedObjectRef(obj.gasObject) as boolean &&\n        (typeof obj.events === \"undefined\" ||\n            Array.isArray(obj.events)) &&\n        (typeof obj.dependencies === \"undefined\" ||\n            Array.isArray(obj.dependencies) &&\n            obj.dependencies.every((e: any) =>\n                isTransactionDigest(e) as boolean\n            ))\n    )\n}\n\nexport function isTransactionEffectsResponse(obj: any, _argumentName?: string): obj is TransactionEffectsResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isCertifiedTransaction(obj.certificate) as boolean &&\n        isTransactionEffects(obj.effects) as boolean &&\n        (obj.timestamp_ms === null ||\n            isSequenceNumber(obj.timestamp_ms) as boolean)\n    )\n}\n\nexport function isGatewayTxSeqNumber(obj: any, _argumentName?: string): obj is GatewayTxSeqNumber {\n    return (\n        typeof obj === \"number\"\n    )\n}\n\nexport function isGetTxnDigestsResponse(obj: any, _argumentName?: string): obj is GetTxnDigestsResponse {\n    return (\n        Array.isArray(obj) &&\n        obj.every((e: any) =>\n            Array.isArray(e) &&\n            isSequenceNumber(e[0]) as boolean &&\n            isTransactionDigest(e[1]) as boolean\n        )\n    )\n}\n\nexport function isMoveCall(obj: any, _argumentName?: string): obj is MoveCall {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isSuiObjectRef(obj.package) as boolean &&\n        isTransactionDigest(obj.module) as boolean &&\n        isTransactionDigest(obj.function) as boolean &&\n        (typeof obj.typeArguments === \"undefined\" ||\n            Array.isArray(obj.typeArguments) &&\n            obj.typeArguments.every((e: any) =>\n                isTransactionDigest(e) as boolean\n            )) &&\n        (typeof obj.arguments === \"undefined\" ||\n            Array.isArray(obj.arguments) &&\n            obj.arguments.every((e: any) =>\n                isSuiJsonValue(e) as boolean\n            ))\n    )\n}\n\nexport function isSuiJsonValue(obj: any, _argumentName?: string): obj is SuiJsonValue {\n    return (\n        (isTransactionDigest(obj) as boolean ||\n            isSequenceNumber(obj) as boolean ||\n            obj === false ||\n            obj === true ||\n            Array.isArray(obj) &&\n            obj.every((e: any) =>\n            (isTransactionDigest(e) as boolean ||\n                isSequenceNumber(e) as boolean ||\n                e === false ||\n                e === true)\n            ))\n    )\n}\n\nexport function isEmptySignInfo(obj: any, _argumentName?: string): obj is EmptySignInfo {\n    return (\n        typeof obj === \"object\"\n    )\n}\n\nexport function isAuthorityName(obj: any, _argumentName?: string): obj is AuthorityName {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isAuthoritySignature(obj: any, _argumentName?: string): obj is AuthoritySignature {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isTransactionBytes(obj: any, _argumentName?: string): obj is TransactionBytes {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.txBytes) as boolean &&\n        isSuiObjectRef(obj.gas) as boolean\n    )\n}\n\nexport function isMergeCoinResponse(obj: any, _argumentName?: string): obj is MergeCoinResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isCertifiedTransaction(obj.certificate) as boolean &&\n        isSuiObject(obj.updatedCoin) as boolean &&\n        isSuiObject(obj.updatedGas) as boolean\n    )\n}\n\nexport function isSplitCoinResponse(obj: any, _argumentName?: string): obj is SplitCoinResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isCertifiedTransaction(obj.certificate) as boolean &&\n        isSuiObject(obj.updatedCoin) as boolean &&\n        Array.isArray(obj.newCoins) &&\n        obj.newCoins.every((e: any) =>\n            isSuiObject(e) as boolean\n        ) &&\n        isSuiObject(obj.updatedGas) as boolean\n    )\n}\n\nexport function isPublishResponse(obj: any, _argumentName?: string): obj is PublishResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isCertifiedTransaction(obj.certificate) as boolean &&\n        Array.isArray(obj.createdObjects) &&\n        obj.createdObjects.every((e: any) =>\n            isSuiObject(e) as boolean\n        ) &&\n        isSuiPackage(obj.package) as boolean &&\n        isSuiObject(obj.updatedGas) as boolean\n    )\n}\n\nexport function isSuiPackage(obj: any, _argumentName?: string): obj is SuiPackage {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.digest) as boolean &&\n        isTransactionDigest(obj.objectId) as boolean &&\n        isSequenceNumber(obj.version) as boolean\n    )\n}\n\nexport function isTransactionResponse(obj: any, _argumentName?: string): obj is TransactionResponse {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isTransactionEffectsResponse(obj.EffectResponse) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isSplitCoinResponse(obj.SplitCoinResponse) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isMergeCoinResponse(obj.MergeCoinResponse) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isPublishResponse(obj.PublishResponse) as boolean)\n    )\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/*\n * Generated type guards for \"client.ts\".\n * WARNING: Do not manually change this file.\n */\nimport { HttpHeaders, RpcParams, ValidResponse, ErrorResponse } from \"./client\";\nimport { isTransactionDigest } from \"../index.guard\";\n\nexport function isHttpHeaders(obj: any, _argumentName?: string): obj is HttpHeaders {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\")\n    )\n}\n\nexport function isRpcParams(obj: any, _argumentName?: string): obj is RpcParams {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.method) as boolean &&\n        Array.isArray(obj.args)\n    )\n}\n\nexport function isValidResponse(obj: any, _argumentName?: string): obj is ValidResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj.jsonrpc === \"2.0\" &&\n        isTransactionDigest(obj.id) as boolean\n    )\n}\n\nexport function isErrorResponse(obj: any, _argumentName?: string): obj is ErrorResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj.jsonrpc === \"2.0\" &&\n        isTransactionDigest(obj.id) as boolean &&\n        (obj.error !== null &&\n            typeof obj.error === \"object\" ||\n            typeof obj.error === \"function\") &&\n        isTransactionDigest(obj.error.message) as boolean\n    )\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport RpcClient from 'jayson/lib/client/browser';\nimport fetch from 'cross-fetch';\nimport { isErrorResponse, isValidResponse } from './client.guard';\nconst LosslessJSON = require('lossless-json');\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = { [header: string]: string };\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  method: string;\n  args: Array<any>;\n};\n\nexport class JsonRpcClient {\n  private rpcClient: RpcClient;\n\n  constructor(url: string, httpHeaders?: HttpHeaders) {\n    this.rpcClient = this.createRpcClient(url, httpHeaders);\n  }\n\n  private createRpcClient(url: string, httpHeaders?: HttpHeaders): RpcClient {\n    const client = new RpcClient(\n      async (\n        request: any,\n        callback: (arg0: Error | null, arg1?: string | undefined) => void\n      ) => {\n        const options = {\n          method: 'POST',\n          body: request,\n          headers: Object.assign(\n            {\n              'Content-Type': 'application/json',\n            },\n            httpHeaders || {}\n          ),\n        };\n\n        try {\n          let res: Response = await fetch(url, options);\n          const text = await res.text();\n          const result = JSON.stringify(\n            LosslessJSON.parse(text, (key: string, value: any) => {\n              if (value == null) {\n                return value;\n              }\n              if (key === 'balance') return value.toString();\n              try {\n                if (value.isLosslessNumber) return value.valueOf();\n              } catch {\n                return value.toString();\n              }\n              return value;\n            })\n          );\n          if (res.ok) {\n            callback(null, result);\n          } else {\n            callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n          }\n        } catch (err) {\n          if (err instanceof Error) callback(err);\n        }\n      },\n      {}\n    );\n\n    return client;\n  }\n\n  async requestWithType<T>(\n    method: string,\n    args: Array<any>,\n    isT: (val: any) => val is T\n  ): Promise<T> {\n    const response = await this.request(method, args);\n    if (isErrorResponse(response)) {\n      throw new Error(`RPC Error: ${response.error.message}`);\n    } else if (isValidResponse(response)) {\n      if (isT(response.result)) return response.result;\n      else\n        throw new Error(\n          `RPC Error: result not of expected type. Result received was: ${JSON.stringify(\n            response.result\n          )}`\n        );\n    }\n    throw new Error(`Unexpected RPC Response: ${response}`);\n  }\n\n  async request(method: string, args: Array<any>): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.rpcClient.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  }\n\n  async batchRequestWithType<T>(\n    requests: RpcParams[],\n    isT: (val: any) => val is T\n  ): Promise<T[]> {\n    const responses = await this.batchRequest(requests);\n    // TODO: supports other error modes such as throw or return\n    const validResponses = responses.filter(\n      (response: any) => isValidResponse(response) && isT(response.result)\n    );\n\n    return validResponses.map((response: ValidResponse) => response.result);\n  }\n\n  async batchRequest(requests: RpcParams[]): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map(params => {\n        return this.rpcClient.request(params.method, params.args);\n      });\n\n      this.rpcClient.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  }\n}\n\nexport type ValidResponse = {\n  jsonrpc: '2.0';\n  id: string;\n  result: any;\n};\n\nexport type ErrorResponse = {\n  jsonrpc: '2.0';\n  id: string;\n  error: {\n    code: any;\n    message: string;\n    data?: any;\n  };\n};\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Provider } from './provider';\nimport { JsonRpcClient } from '../rpc/client';\nimport {\n  isGetObjectDataResponse,\n  isGetOwnedObjectsResponse,\n  isGetTxnDigestsResponse,\n  isTransactionEffectsResponse,\n  isTransactionResponse,\n} from '../index.guard';\nimport {\n  GatewayTxSeqNumber,\n  GetTxnDigestsResponse,\n  GetObjectDataResponse,\n  SuiObjectInfo,\n  TransactionDigest,\n  TransactionEffectsResponse,\n  TransactionResponse,\n} from '../types';\n\nconst isNumber = (val: any): val is number => typeof val === 'number';\n\nexport class JsonRpcProvider extends Provider {\n  private client: JsonRpcClient;\n\n  /**\n   * Establish a connection to a Sui Gateway endpoint\n   *\n   * @param endpoint URL to the Sui Gateway endpoint\n   */\n  constructor(public endpoint: string) {\n    super();\n    this.client = new JsonRpcClient(endpoint);\n  }\n\n  // Objects\n  async getObjectsOwnedByAddress(address: string): Promise<SuiObjectInfo[]> {\n    try {\n      return await this.client.requestWithType(\n        'sui_getObjectsOwnedByAddress',\n        [address],\n        isGetOwnedObjectsResponse\n      );\n    } catch (err) {\n      throw new Error(\n        `Error fetching owned object: ${err} for address ${address}`\n      );\n    }\n  }\n\n  async getObjectsOwnedByObject(objectId: string): Promise<SuiObjectInfo[]> {\n    try {\n      return await this.client.requestWithType(\n        'sui_getObjectsOwnedByObject',\n        [objectId],\n        isGetOwnedObjectsResponse\n      );\n    } catch (err) {\n      throw new Error(\n        `Error fetching owned object: ${err} for objectId ${objectId}`\n      );\n    }\n  }\n\n  async getObject(objectId: string): Promise<GetObjectDataResponse> {\n    try {\n      return await this.client.requestWithType(\n        'sui_getObject',\n        [objectId],\n        isGetObjectDataResponse\n      );\n    } catch (err) {\n      throw new Error(`Error fetching object info: ${err} for id ${objectId}`);\n    }\n  }\n\n  async getObjectBatch(objectIds: string[]): Promise<GetObjectDataResponse[]> {\n    const requests = objectIds.map(id => ({\n      method: 'sui_getObject',\n      args: [id],\n    }));\n    try {\n      return await this.client.batchRequestWithType(\n        requests,\n        isGetObjectDataResponse\n      );\n    } catch (err) {\n      throw new Error(`Error fetching object info: ${err} for id ${objectIds}`);\n    }\n  }\n\n  // Transactions\n\n  async getTransactionsForObject(\n    objectID: string\n  ): Promise<GetTxnDigestsResponse> {\n    const requests = [\n      {\n        method: 'sui_getTransactionsByInputObject',\n        args: [objectID],\n      },\n      {\n        method: 'sui_getTransactionsByMutatedObject',\n        args: [objectID],\n      },\n    ];\n\n    try {\n      const results = await this.client.batchRequestWithType(\n        requests,\n        isGetTxnDigestsResponse\n      );\n      return [...results[0], ...results[1]];\n    } catch (err) {\n      throw new Error(\n        `Error getting transactions for object: ${err} for id ${objectID}`\n      );\n    }\n  }\n\n  async getTransactionsForAddress(\n    addressID: string\n  ): Promise<GetTxnDigestsResponse> {\n    const requests = [\n      {\n        method: 'sui_getTransactionsToAddress',\n        args: [addressID],\n      },\n      {\n        method: 'sui_getTransactionsFromAddress',\n        args: [addressID],\n      },\n    ];\n\n    try {\n      const results = await this.client.batchRequestWithType(\n        requests,\n        isGetTxnDigestsResponse\n      );\n      return [...results[0], ...results[1]];\n    } catch (err) {\n      throw new Error(\n        `Error getting transactions for address: ${err} for id ${addressID}`\n      );\n    }\n  }\n\n  async getTransactionWithEffects(\n    digest: TransactionDigest\n  ): Promise<TransactionEffectsResponse> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_getTransaction',\n        [digest],\n        isTransactionEffectsResponse\n      );\n      return resp;\n    } catch (err) {\n      throw new Error(\n        `Error getting transaction with effects: ${err} for digest ${digest}`\n      );\n    }\n  }\n\n  async getTransactionWithEffectsBatch(\n    digests: TransactionDigest[]\n  ): Promise<TransactionEffectsResponse[]> {\n    const requests = digests.map(d => ({\n      method: 'sui_getTransaction',\n      args: [d],\n    }));\n    try {\n      return await this.client.batchRequestWithType(\n        requests,\n        isTransactionEffectsResponse\n      );\n    } catch (err) {\n      const list = digests.join(', ').substring(0, -2);\n      throw new Error(\n        `Error getting transaction effects: ${err} for digests [${list}]`\n      );\n    }\n  }\n\n  async executeTransaction(\n    txnBytes: string,\n    signature: string,\n    pubkey: string\n  ): Promise<TransactionResponse> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_executeTransaction',\n        [txnBytes, signature, pubkey],\n        isTransactionResponse\n      );\n      return resp;\n    } catch (err) {\n      throw new Error(`Error executing transaction: ${err}}`);\n    }\n  }\n\n  async getTotalTransactionNumber(): Promise<number> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_getTotalTransactionNumber',\n        [],\n        isNumber\n      );\n      return resp;\n    } catch (err) {\n      throw new Error(`Error fetching total transaction number: ${err}`);\n    }\n  }\n\n  async getTransactionDigestsInRange(\n    start: GatewayTxSeqNumber,\n    end: GatewayTxSeqNumber\n  ): Promise<GetTxnDigestsResponse> {\n    try {\n      return await this.client.requestWithType(\n        'sui_getTransactionsInRange',\n        [start, end],\n        isGetTxnDigestsResponse\n      );\n    } catch (err) {\n      throw new Error(\n        `Error fetching transaction digests in range: ${err} for range ${start}-${end}`\n      );\n    }\n  }\n\n  async getRecentTransactions(count: number): Promise<GetTxnDigestsResponse> {\n    try {\n      return await this.client.requestWithType(\n        'sui_getRecentTransactions',\n        [count],\n        isGetTxnDigestsResponse\n      );\n    } catch (err) {\n      throw new Error(\n        `Error fetching recent transactions: ${err} for count ${count}`\n      );\n    }\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Buffer } from 'buffer';\n\nexport class HexDataBuffer {\n  private _data: Uint8Array;\n\n  constructor(data: Uint8Array | string) {\n    if (typeof data === 'string') {\n      this._data = new Uint8Array(Buffer.from(data, 'hex'));\n    } else {\n      this._data = data;\n    }\n  }\n\n  getData(): Uint8Array {\n    return this._data;\n  }\n\n  getLength(): number {\n    return this._data.length;\n  }\n\n  toString(): string {\n    return Buffer.from(this._data).toString('hex');\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { isTransactionBytes } from '../../index.guard';\nimport { JsonRpcClient } from '../../rpc/client';\nimport { Base64DataBuffer } from '../../serialization/base64';\nimport { SuiAddress } from '../../types';\nimport {\n  MoveCallTransaction,\n  MergeCoinTransaction,\n  SplitCoinTransaction,\n  TransferObjectTransaction,\n  PublishTransaction,\n  TxnDataSerializer,\n} from './txn-data-serializer';\n\n/**\n * This is a temporary implementation of the `TxnDataSerializer` class\n * that uses the Sui Gateway RPC API to serialize a transaction into BCS bytes.\n * This class will be deprecated once we support BCS serialization in TypeScript.\n * It is not safe to use this class in production because one cannot authenticate\n * the encoding.\n */\nexport class RpcTxnDataSerializer implements TxnDataSerializer {\n  private client: JsonRpcClient;\n\n  /**\n   * Establish a connection to a Sui Gateway endpoint\n   *\n   * @param endpoint URL to the Sui Gateway endpoint\n   */\n  constructor(endpoint: string) {\n    this.client = new JsonRpcClient(endpoint);\n  }\n\n  async newTransferObject(\n    signerAddress: SuiAddress,\n    t: TransferObjectTransaction\n  ): Promise<Base64DataBuffer> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_transferObject',\n        [signerAddress, t.objectId, t.gasPayment, t.gasBudget, t.recipient],\n        isTransactionBytes\n      );\n      return new Base64DataBuffer(resp.txBytes);\n    } catch (err) {\n      throw new Error(`Error transferring coin: ${err} with args ${t}`);\n    }\n  }\n\n  async newMoveCall(\n    signerAddress: SuiAddress,\n    t: MoveCallTransaction\n  ): Promise<Base64DataBuffer> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_moveCall',\n        [\n          signerAddress,\n          t.packageObjectId,\n          t.module,\n          t.function,\n          t.typeArguments,\n          t.arguments,\n          t.gasPayment,\n          t.gasBudget,\n        ],\n        isTransactionBytes\n      );\n      return new Base64DataBuffer(resp.txBytes);\n    } catch (err) {\n      throw new Error(`Error executing a move call: ${err} with args ${t}`);\n    }\n  }\n\n  async newMergeCoin(\n    signerAddress: SuiAddress,\n    t: MergeCoinTransaction\n  ): Promise<Base64DataBuffer> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_mergeCoins',\n        [\n          signerAddress,\n          t.primaryCoin,\n          t.coinToMerge,\n          t.gasPayment,\n          t.gasBudget,\n        ],\n        isTransactionBytes\n      );\n      return new Base64DataBuffer(resp.txBytes);\n    } catch (err) {\n      throw new Error(`Error merging coin: ${err}`);\n    }\n  }\n\n  async newSplitCoin(\n    signerAddress: SuiAddress,\n    t: SplitCoinTransaction\n  ): Promise<Base64DataBuffer> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_splitCoin',\n        [\n          signerAddress,\n          t.coinObjectId,\n          t.splitAmounts,\n          t.gasPayment,\n          t.gasBudget,\n        ],\n        isTransactionBytes\n      );\n      return new Base64DataBuffer(resp.txBytes);\n    } catch (err) {\n      throw new Error(`Error splitting coin: ${err}`);\n    }\n  }\n\n  async newPublish(\n    signerAddress: SuiAddress,\n    t: PublishTransaction\n  ): Promise<Base64DataBuffer> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_publish',\n        [\n          signerAddress,\n          t.compiledModules,\n          t.gasPayment,\n          t.gasBudget,\n        ],\n        isTransactionBytes\n      );\n      return new Base64DataBuffer(resp.txBytes);\n    } catch (err) {\n      throw new Error(`Error publishing package ${err}`);\n    }\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  CertifiedTransaction,\n  TransactionDigest,\n  GetTxnDigestsResponse,\n  GatewayTxSeqNumber,\n  SuiObjectInfo,\n  GetObjectDataResponse,\n  TransactionResponse,\n} from '../types';\nimport { Provider } from './provider';\n\nexport class VoidProvider extends Provider {\n  // Objects\n  async getObjectsOwnedByAddress(_address: string): Promise<SuiObjectInfo[]> {\n    throw this.newError('getOwnedObjects');\n  }\n\n  async getObject(_objectId: string): Promise<GetObjectDataResponse> {\n    throw this.newError('getObject');\n  }\n\n  // Transactions\n  async getTransaction(\n    _digest: TransactionDigest\n  ): Promise<CertifiedTransaction> {\n    throw this.newError('getTransaction');\n  }\n\n  async executeTransaction(\n    _txnBytes: string,\n    _signature: string,\n    _pubkey: string\n  ): Promise<TransactionResponse> {\n    throw this.newError('executeTransaction');\n  }\n\n  async getTotalTransactionNumber(): Promise<number> {\n    throw this.newError('getTotalTransactionNumber');\n  }\n\n  async getTransactionDigestsInRange(\n    _start: GatewayTxSeqNumber,\n    _end: GatewayTxSeqNumber\n  ): Promise<GetTxnDigestsResponse> {\n    throw this.newError('getTransactionDigestsInRange');\n  }\n\n  async getRecentTransactions(_count: number): Promise<GetTxnDigestsResponse> {\n    throw this.newError('getRecentTransactions');\n  }\n\n  private newError(operation: string): Error {\n    return new Error(`Please use a valid provider for ${operation}`);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { JsonRpcProvider } from '../providers/json-rpc-provider';\nimport { Provider } from '../providers/provider';\nimport { VoidProvider } from '../providers/void-provider';\nimport { Base64DataBuffer } from '../serialization/base64';\nimport { SuiAddress, TransactionResponse } from '../types';\nimport { SignaturePubkeyPair, Signer } from './signer';\nimport { RpcTxnDataSerializer } from './txn-data-serializers/rpc-txn-data-serializer';\nimport {\n  MoveCallTransaction,\n  MergeCoinTransaction,\n  SplitCoinTransaction,\n  TransferObjectTransaction,\n  TxnDataSerializer,\n  PublishTransaction,\n} from './txn-data-serializers/txn-data-serializer';\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class SignerWithProvider implements Signer {\n  readonly provider: Provider;\n  readonly serializer: TxnDataSerializer;\n\n  ///////////////////\n  // Sub-classes MUST implement these\n\n  // Returns the checksum address\n  abstract getAddress(): Promise<SuiAddress>;\n\n  /**\n   * Returns the signature for the data and the public key of the signer\n   */\n  abstract signData(data: Base64DataBuffer): Promise<SignaturePubkeyPair>;\n\n  // Returns a new instance of the Signer, connected to provider.\n  // This MAY throw if changing providers is not supported.\n  abstract connect(provider: Provider): SignerWithProvider;\n\n  ///////////////////\n  // Sub-classes MAY override these\n\n  constructor(provider?: Provider, serializer?: TxnDataSerializer) {\n    this.provider = provider || new VoidProvider();\n    let endpoint = '';\n    if (this.provider instanceof JsonRpcProvider) {\n      endpoint = this.provider.endpoint;\n    }\n    this.serializer = serializer || new RpcTxnDataSerializer(endpoint);\n  }\n\n  /**\n   * Sign a transaction and submit to the Gateway for execution\n   *\n   * @param txBytes BCS serialised TransactionData bytes\n   */\n  async signAndExecuteTransaction(\n    txBytes: Base64DataBuffer\n  ): Promise<TransactionResponse> {\n    const sig = await this.signData(txBytes);\n    return await this.provider.executeTransaction(\n      txBytes.toString(),\n      sig.signature.toString(),\n      sig.pubKey.toString()\n    );\n  }\n\n  /**\n   * Serialize and Sign a `TransferObject` transaction and submit to the Gateway for execution\n   */\n  async transferObject(\n    transaction: TransferObjectTransaction\n  ): Promise<TransactionResponse> {\n    const signerAddress = await this.getAddress();\n    const txBytes = await this.serializer.newTransferObject(\n      signerAddress,\n      transaction\n    );\n    return await this.signAndExecuteTransaction(txBytes);\n  }\n\n  /**\n   * Serialize and Sign a `MergeCoin` transaction and submit to the Gateway for execution\n   */\n  async mergeCoin(\n    transaction: MergeCoinTransaction\n  ): Promise<TransactionResponse> {\n    const signerAddress = await this.getAddress();\n    const txBytes = await this.serializer.newMergeCoin(\n      signerAddress,\n      transaction\n    );\n    return await this.signAndExecuteTransaction(txBytes);\n  }\n\n  /**\n   * Serialize and Sign a `SplitCoin` transaction and submit to the Gateway for execution\n   */\n  async splitCoin(\n    transaction: SplitCoinTransaction\n  ): Promise<TransactionResponse> {\n    const signerAddress = await this.getAddress();\n    const txBytes = await this.serializer.newSplitCoin(\n      signerAddress,\n      transaction\n    );\n    return await this.signAndExecuteTransaction(txBytes);\n  }\n\n  /**\n   * Serialize and Sign a `MoveCall` transaction and submit to the Gateway for execution\n   */\n  async executeMoveCall(\n    transaction: MoveCallTransaction\n  ): Promise<TransactionResponse> {\n    const signerAddress = await this.getAddress();\n    const txBytes = await this.serializer.newMoveCall(\n      signerAddress,\n      transaction\n    );\n    return await this.signAndExecuteTransaction(txBytes);\n  }\n\n  async publish(\n    transaction: PublishTransaction\n  ): Promise<TransactionResponse> {\n    const signerAddress = await this.getAddress();\n    const txBytes = await this.serializer.newPublish(\n      signerAddress,\n      transaction\n    );\n    return await this.signAndExecuteTransaction(txBytes);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Ed25519Keypair } from '../cryptography/ed25519-keypair';\nimport { Provider } from '../providers/provider';\nimport { Base64DataBuffer } from '../serialization/base64';\nimport { SuiAddress } from '../types';\nimport { SignaturePubkeyPair } from './signer';\nimport { SignerWithProvider } from './signer-with-provider';\nimport { TxnDataSerializer } from './txn-data-serializers/txn-data-serializer';\n\nexport class RawSigner extends SignerWithProvider {\n  private readonly keypair: Ed25519Keypair;\n\n  constructor(\n    keypair: Ed25519Keypair,\n    provider?: Provider,\n    serializer?: TxnDataSerializer\n  ) {\n    super(provider, serializer);\n    this.keypair = keypair;\n  }\n\n  async getAddress(): Promise<SuiAddress> {\n    return this.keypair.getPublicKey().toSuiAddress();\n  }\n\n  async signData(data: Base64DataBuffer): Promise<SignaturePubkeyPair> {\n    return {\n      signature: this.keypair.signData(data),\n      pubKey: this.keypair.getPublicKey(),\n    };\n  }\n\n  connect(provider: Provider): SignerWithProvider {\n    return new RawSigner(this.keypair, provider);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Base64DataBuffer } from \"../serialization/base64\";\n\n/** Base64 string representing the object digest */\nexport type TransactionDigest = string;\nexport type SuiAddress = string;\nexport type ObjectOwner =\n  | { AddressOwner: SuiAddress }\n  | { ObjectOwner: SuiAddress }\n  | { SingleOwner: SuiAddress }\n  | 'Shared'\n  | 'Immutable';\n\n\n// source of truth is\n// https://github.com/MystenLabs/sui/blob/acb2b97ae21f47600e05b0d28127d88d0725561d/crates/sui-types/src/base_types.rs#L171\nconst TX_DIGEST_LENGTH = 32;\n// taken from https://rgxdb.com/r/1NUN74O6\nconst VALID_BASE64_REGEX =\n  /^(?:[a-zA-Z0-9+\\/]{4})*(?:|(?:[a-zA-Z0-9+\\/]{3}=)|(?:[a-zA-Z0-9+\\/]{2}==)|(?:[a-zA-Z0-9+\\/]{1}===))$/;\n\nexport function isValidTransactionDigest(value: string): value is TransactionDigest {\n  return new Base64DataBuffer(value).getLength() === TX_DIGEST_LENGTH\n    && VALID_BASE64_REGEX.test(value);\n}\n\n// TODO - can we automatically sync this with rust length definition?\n// Source of truth is\n// https://github.com/MystenLabs/sui/blob/acb2b97ae21f47600e05b0d28127d88d0725561d/crates/sui-types/src/base_types.rs#L67\n// which uses the Move account address length\n// https://github.com/move-language/move/blob/67ec40dc50c66c34fd73512fcc412f3b68d67235/language/move-core/types/src/account_address.rs#L23 .\n\nconst SUI_ADDRESS_LENGTH = 20;\nexport function isValidSuiAddress(value: string): value is SuiAddress {\n  return isHex(value) &&\n    getHexByteLength(value) === SUI_ADDRESS_LENGTH;\n}\n\nexport function isValidSuiObjectId(value: string): boolean {\n  return isValidSuiAddress(value);\n}\n\nfunction isHex(value: string): boolean {\n  return /^(0x|0X)?[a-fA-F0-9]+$/.test(value) && value.length % 2 === 0;\n}\n\nfunction getHexByteLength(value: string): number {\n  return /^(0x|0X)/.test(value)\n    ? (value.length - 2) / 2\n    : value.length / 2;\n}","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ObjectOwner } from './common';\nimport { TransactionDigest } from './common';\n\nexport type SuiObjectRef = {\n  /** Base64 string representing the object digest */\n  digest: TransactionDigest;\n  /** Hex code as string representing the object id */\n  objectId: string;\n  /** Object version */\n  version: number;\n};\n\nexport type SuiObjectInfo = SuiObjectRef & {\n  type: string;\n  owner: ObjectOwner;\n  previousTransaction: TransactionDigest;\n};\n\nexport type ObjectContentFields = Record<string, any>;\n\nexport type MovePackageContent = Record<string, string>;\n\nexport type SuiData = { dataType: ObjectType } & (\n  | SuiMoveObject\n  | SuiMovePackage\n);\n\nexport type SuiMoveObject = {\n  /** Move type (e.g., \"0x2::coin::Coin<0x2::sui::SUI>\") */\n  type: string;\n  /** Fields and values stored inside the Move object */\n  fields: ObjectContentFields;\n  has_public_transfer: boolean;\n};\n\nexport type SuiMovePackage = {\n  /** A mapping from module name to disassembled Move bytecode */\n  disassembled: MovePackageContent;\n};\n\nexport type SuiObject = {\n  /** The meat of the object */\n  data: SuiData;\n  /** The owner of the object */\n  owner: ObjectOwner;\n  /** The digest of the transaction that created or last mutated this object */\n  previousTransaction: TransactionDigest;\n  /**\n   * The amount of SUI we would rebate if this object gets deleted.\n   * This number is re-calculated each time the object is mutated based on\n   * the present storage gas price.\n   */\n  storageRebate: number;\n  reference: SuiObjectRef;\n};\n\nexport type ObjectStatus = 'Exists' | 'NotExists' | 'Deleted';\nexport type ObjectType = 'moveObject' | 'package';\n\nexport type GetOwnedObjectsResponse = SuiObjectInfo[];\n\nexport type GetObjectDataResponse = {\n  status: ObjectStatus;\n  details: SuiObject | ObjectId | SuiObjectRef;\n};\n\nexport type ObjectDigest = string;\nexport type ObjectId = string;\nexport type SequenceNumber = number;\n\n/* -------------------------------------------------------------------------- */\n/*                              Helper functions                              */\n/* -------------------------------------------------------------------------- */\n\n/* -------------------------- GetObjectDataResponse ------------------------- */\n\nexport function getObjectExistsResponse(\n  resp: GetObjectDataResponse\n): SuiObject | undefined {\n  return resp.status !== 'Exists' ? undefined : (resp.details as SuiObject);\n}\n\nexport function getObjectDeletedResponse(\n  resp: GetObjectDataResponse\n): SuiObjectRef | undefined {\n  return resp.status !== 'Deleted' ? undefined : (resp.details as SuiObjectRef);\n}\n\nexport function getObjectNotExistsResponse(\n  resp: GetObjectDataResponse\n): ObjectId | undefined {\n  return resp.status !== 'NotExists' ? undefined : (resp.details as ObjectId);\n}\n\nexport function getObjectReference(\n  resp: GetObjectDataResponse\n): SuiObjectRef | undefined {\n  return (\n    getObjectExistsResponse(resp)?.reference || getObjectDeletedResponse(resp)\n  );\n}\n\n/* ------------------------------ SuiObjectRef ------------------------------ */\n\nexport function getObjectId(\n  data: GetObjectDataResponse | SuiObjectRef\n): ObjectId {\n  if ('objectId' in data) {\n    return data.objectId;\n  }\n  return (\n    getObjectReference(data)?.objectId ?? getObjectNotExistsResponse(data)!\n  );\n}\n\nexport function getObjectVersion(\n  data: GetObjectDataResponse | SuiObjectRef\n): number | undefined {\n  if ('version' in data) {\n    return data.version;\n  }\n  return getObjectReference(data)?.version;\n}\n\n/* -------------------------------- SuiObject ------------------------------- */\n\nexport function getObjectType(\n  resp: GetObjectDataResponse\n): ObjectType | undefined {\n  return getObjectExistsResponse(resp)?.data.dataType;\n}\n\nexport function getObjectPreviousTransactionDigest(\n  resp: GetObjectDataResponse\n): TransactionDigest | undefined {\n  return getObjectExistsResponse(resp)?.previousTransaction;\n}\n\nexport function getObjectOwner(\n  resp: GetObjectDataResponse\n): ObjectOwner | undefined {\n  return getObjectExistsResponse(resp)?.owner;\n}\n\nexport function getMoveObjectType(\n  resp: GetObjectDataResponse\n): string | undefined {\n  return getMoveObject(resp)?.type;\n}\n\nexport function getObjectFields(\n  resp: GetObjectDataResponse\n): ObjectContentFields | undefined {\n  return getMoveObject(resp)?.fields;\n}\n\nexport function getMoveObject(\n  data: GetObjectDataResponse | SuiObject\n): SuiMoveObject | undefined {\n  const suiObject = 'data' in data ? data : getObjectExistsResponse(data);\n  if (suiObject?.data.dataType !== 'moveObject') {\n    return undefined;\n  }\n  return suiObject.data as SuiMoveObject;\n}\n\nexport function hasPublicTransfer(\n  data: GetObjectDataResponse | SuiObject\n): boolean {\n  return getMoveObject(data)?.has_public_transfer ?? false;\n}\n\nexport function getMovePackageContent(\n  data: GetObjectDataResponse | SuiMovePackage\n): MovePackageContent | undefined {\n  if ('disassembled' in data) {\n    return data.disassembled;\n  }\n  const suiObject = getObjectExistsResponse(data);\n  if (suiObject?.data.dataType !== 'package') {\n    return undefined;\n  }\n  return (suiObject.data as SuiMovePackage).disassembled;\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ObjectOwner, SuiAddress, TransactionDigest } from './common';\nimport { SuiMovePackage, SuiObject, SuiObjectRef } from './objects';\n\nexport type TransferObject = {\n  recipient: SuiAddress;\n  objectRef: SuiObjectRef;\n};\n\nexport type SuiTransferSui = {\n  recipient: SuiAddress;\n  amount: number | null;\n};\n\nexport type SuiChangeEpoch = {\n  epoch: EpochId;\n  storage_charge: number;\n  computation_charge: number;\n};\n\nexport type TransactionKindName =\n  | 'TransferObject'\n  | 'Publish'\n  | 'Call'\n  | 'TransferSui'\n  | 'ChangeEpoch';\nexport type SuiTransactionKind =\n  | { TransferObject: TransferObject }\n  | { Publish: SuiMovePackage }\n  | { Call: MoveCall }\n  | { TransferSui: SuiTransferSui }\n  | { ChangeEpoch: SuiChangeEpoch };\nexport type TransactionData = {\n  transactions: SuiTransactionKind[];\n  sender: SuiAddress;\n  gasPayment: SuiObjectRef;\n  gasBudget: number;\n};\n\n// TODO: support u64\nexport type EpochId = number;\n\nexport type AuthorityQuorumSignInfo = {\n  epoch: EpochId;\n  signatures: AuthoritySignature[];\n};\n\nexport type CertifiedTransaction = {\n  transactionDigest: TransactionDigest;\n  data: TransactionData;\n  txSignature: string;\n  authSignInfo: AuthorityQuorumSignInfo;\n};\n\nexport type GasCostSummary = {\n  computationCost: number;\n  storageCost: number;\n  storageRebate: number;\n};\n\nexport type ExecutionStatusType = 'success' | 'failure';\nexport type ExecutionStatus = {\n  status: ExecutionStatusType;\n  error?: string;\n};\n\n// TODO: change the tuple to struct from the server end\nexport type OwnedObjectRef = {\n  owner: ObjectOwner;\n  reference: SuiObjectRef;\n};\n\nexport type TransactionEffects = {\n  /** The status of the execution */\n  status: ExecutionStatus;\n  gasUsed: GasCostSummary;\n  /** The object references of the shared objects used in this transaction. Empty if no shared objects were used. */\n  sharedObjects?: SuiObjectRef[];\n  /** The transaction digest */\n  transactionDigest: TransactionDigest;\n  /** ObjectRef and owner of new objects created */\n  created?: OwnedObjectRef[];\n  /** ObjectRef and owner of mutated objects, including gas object */\n  mutated?: OwnedObjectRef[];\n  /**\n   * ObjectRef and owner of objects that are unwrapped in this transaction.\n   * Unwrapped objects are objects that were wrapped into other objects in the past,\n   * and just got extracted out.\n   */\n  unwrapped?: OwnedObjectRef[];\n  /** Object Refs of objects now deleted (the old refs) */\n  deleted?: SuiObjectRef[];\n  /** Object refs of objects now wrapped in other objects */\n  wrapped?: SuiObjectRef[];\n  /**\n   * The updated gas object reference. Have a dedicated field for convenient access.\n   * It's also included in mutated.\n   */\n  gasObject: OwnedObjectRef;\n  /** The events emitted during execution. Note that only successful transactions emit events */\n  // TODO: properly define type when this is being used\n  events?: any[];\n  /** The set of transaction digests this transaction depends on */\n  dependencies?: TransactionDigest[];\n};\n\nexport type TransactionEffectsResponse = {\n  certificate: CertifiedTransaction;\n  effects: TransactionEffects;\n  timestamp_ms: number | null;\n};\n\nexport type GatewayTxSeqNumber = number;\n\nexport type GetTxnDigestsResponse = [GatewayTxSeqNumber, TransactionDigest][];\n\nexport type MoveCall = {\n  package: SuiObjectRef;\n  module: string;\n  function: string;\n  typeArguments?: string[];\n  arguments?: SuiJsonValue[];\n};\n\nexport type SuiJsonValue =\n  | boolean\n  | number\n  | string\n  | Array<boolean | number | string>;\n\nexport type EmptySignInfo = object;\nexport type AuthorityName = string;\nexport type AuthoritySignature = string;\n\nexport type TransactionBytes = {\n  txBytes: string;\n  gas: SuiObjectRef;\n  // TODO: Add input_objects field\n};\n\nexport type MergeCoinResponse = {\n  certificate: CertifiedTransaction;\n  updatedCoin: SuiObject;\n  updatedGas: SuiObject;\n};\n\nexport type SplitCoinResponse = {\n  certificate: CertifiedTransaction;\n  updatedCoin: SuiObject;\n  newCoins: SuiObject[];\n  updatedGas: SuiObject;\n};\n\nexport type PublishResponse = {\n  certificate: CertifiedTransaction;\n  createdObjects: SuiObject[];\n  package: SuiPackage;\n  updatedGas: SuiObject;\n};\n\nexport type SuiPackage = {\n  digest: string;\n  objectId: string;\n  version: number;\n};\n\nexport type TransactionResponse =\n  | {\n      EffectResponse: TransactionEffectsResponse;\n    }\n  | {\n      SplitCoinResponse: SplitCoinResponse;\n    }\n  | {\n      MergeCoinResponse: MergeCoinResponse;\n    }\n  | {\n      PublishResponse: PublishResponse;\n    };\n\n/* -------------------------------------------------------------------------- */\n/*                              Helper functions                              */\n/* -------------------------------------------------------------------------- */\n\n/* ---------------------------------- CertifiedTransaction --------------------------------- */\nexport function getTransactionDigest(\n  tx: CertifiedTransaction\n): TransactionDigest {\n  return tx.transactionDigest;\n}\n\nexport function getTransactionSignature(tx: CertifiedTransaction): string {\n  return tx.txSignature;\n}\n\nexport function getTransactionAuthorityQuorumSignInfo(\n  tx: CertifiedTransaction\n): AuthorityQuorumSignInfo {\n  return tx.authSignInfo;\n}\n\nexport function getTransactionData(tx: CertifiedTransaction): TransactionData {\n  return tx.data;\n}\n\n/* ----------------------------- TransactionData ---------------------------- */\n\nexport function getTransactionSender(tx: CertifiedTransaction): SuiAddress {\n  return tx.data.sender;\n}\n\nexport function getTransactionGasObject(\n  tx: CertifiedTransaction\n): SuiObjectRef {\n  return tx.data.gasPayment;\n}\n\nexport function getTransactionGasBudget(tx: CertifiedTransaction): number {\n  return tx.data.gasBudget;\n}\n\nexport function getTransferObjectTransaction(\n  data: SuiTransactionKind\n): TransferObject | undefined {\n  return 'TransferObject' in data ? data.TransferObject : undefined;\n}\n\nexport function getPublishTransaction(\n  data: SuiTransactionKind\n): SuiMovePackage | undefined {\n  return 'Publish' in data ? data.Publish : undefined;\n}\n\nexport function getMoveCallTransaction(\n  data: SuiTransactionKind\n): MoveCall | undefined {\n  return 'Call' in data ? data.Call : undefined;\n}\n\nexport function getTransferSuiTransaction(\n  data: SuiTransactionKind\n): SuiTransferSui | undefined {\n  return 'TransferSui' in data ? data.TransferSui : undefined;\n}\n\nexport function getChangeEpochTransaction(\n  data: SuiTransactionKind\n): SuiChangeEpoch | undefined {\n  return 'ChangeEpoch' in data ? data.ChangeEpoch : undefined;\n}\n\nexport function getTransactions(\n  data: CertifiedTransaction\n): SuiTransactionKind[] {\n  return data.data.transactions;\n}\n\nexport function getTransactionKindName(\n  data: SuiTransactionKind\n): TransactionKindName {\n  return Object.keys(data)[0] as TransactionKindName;\n}\n\n/* ----------------------------- ExecutionStatus ---------------------------- */\n\nexport function getExecutionStatusType(\n  data: TransactionEffectsResponse\n): ExecutionStatusType {\n  return getExecutionStatus(data).status;\n}\n\nexport function getExecutionStatus(\n  data: TransactionEffectsResponse\n): ExecutionStatus {\n  return data.effects.status;\n}\n\nexport function getExecutionStatusError(\n  data: TransactionEffectsResponse\n): string | undefined {\n  return getExecutionStatus(data).error;\n}\n\nexport function getExecutionStatusGasSummary(\n  data: TransactionEffectsResponse\n): GasCostSummary {\n  return data.effects.gasUsed;\n}\n\nexport function getTotalGasUsed(data: TransactionEffectsResponse): number {\n  const gasSummary = getExecutionStatusGasSummary(data);\n  return (\n    gasSummary.computationCost +\n    gasSummary.storageCost -\n    gasSummary.storageRebate\n  );\n}\n\n/* --------------------------- TransactionResponse -------------------------- */\n\nexport function getTransactionEffectsResponse(\n  data: TransactionResponse\n): TransactionEffectsResponse | undefined {\n  return 'EffectResponse' in data ? data.EffectResponse : undefined;\n}\n\nexport function getSplitCoinResponse(\n  data: TransactionResponse\n): SplitCoinResponse | undefined {\n  return 'SplitCoinResponse' in data ? data.SplitCoinResponse : undefined;\n}\n\nexport function getMergeCoinResponse(\n  data: TransactionResponse\n): MergeCoinResponse | undefined {\n  return 'MergeCoinResponse' in data ? data.MergeCoinResponse : undefined;\n}\n\nexport function getPublishResponse(\n  data: TransactionResponse\n): PublishResponse | undefined {\n  return 'PublishResponse' in data ? data.PublishResponse : undefined;\n}\n\n/**\n * Get the updated coin after a merge.\n * @param data the response for executing a merge coin transaction\n * @returns the updated state of the primary coin after the merge\n */\nexport function getCoinAfterMerge(\n  data: TransactionResponse\n): SuiObject | undefined {\n  return getMergeCoinResponse(data)?.updatedCoin;\n}\n\n/**\n * Get the updated coin after a split.\n * @param data the response for executing a Split coin transaction\n * @returns the updated state of the original coin object used for the split\n */\nexport function getCoinAfterSplit(\n  data: TransactionResponse\n): SuiObject | undefined {\n  return getSplitCoinResponse(data)?.updatedCoin;\n}\n\n/**\n * Get the newly created coin after a split.\n * @param data the response for executing a Split coin transaction\n * @returns the updated state of the original coin object used for the split\n */\nexport function getNewlyCreatedCoinsAfterSplit(\n  data: TransactionResponse\n): SuiObject[] | undefined {\n  return getSplitCoinResponse(data)?.newCoins;\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { getObjectFields, GetObjectDataResponse } from './objects';\n\nimport { getMoveObjectType } from './objects';\n\nimport BN from 'bn.js';\n\n/**\n * Utility class for 0x2::coin\n * as defined in https://github.com/MystenLabs/sui/blob/ca9046fd8b1a9e8634a4b74b0e7dabdc7ea54475/sui_programmability/framework/sources/Coin.move#L4\n */\nexport class Coin {\n  static isCoin(data: GetObjectDataResponse): boolean {\n    return getMoveObjectType(data)?.startsWith('0x2::coin::Coin') ?? false;\n  }\n\n  static getBalance(data: GetObjectDataResponse): BN | undefined {\n    if (!Coin.isCoin(data)) {\n      return undefined;\n    }\n    const balance = getObjectFields(data)?.balance;\n    return new BN.BN(balance, 10);\n  }\n\n  static getZero(): BN {\n    return new BN.BN('0', 10);\n  }\n}\n"],"names":["Base64DataBuffer","data","Uint8Array","Buffer","from","getData","this","getLength","length","toString","PublicKey","value","undefined","_bn","isPublicKeyData","buffer","Error","BN","byteLength","equals","publicKey","eq","toBase64","toBuffer","toBytes","b","toArrayLike","zeroPad","alloc","copy","toSuiAddress","hexHash","sha3_256","toArray","slice","reduce","output","elem","Ed25519Keypair","keypair","nacl","sign","keyPair","generate","fromSecretKey","secretKey","options","skipValidation","signData","TextEncoder","encode","signature","detached","verify","fromSeed","seed","getPublicKey","Provider","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_argumentName","isTransactionDigest","isObjectOwner","AddressOwner","ObjectOwner","SingleOwner","isSuiObjectRef","digest","objectId","isSequenceNumber","version","isSuiObjectInfo","owner","previousTransaction","isObjectContentFields","entries","every","isMovePackageContent","isSuiData","isObjectType","dataType","isSuiMoveObject","isSuiMovePackage","fields","has_public_transfer","disassembled","isSuiObject","storageRebate","reference","isObjectStatus","isGetOwnedObjectsResponse","Array","isArray","e","isGetObjectDataResponse","status","details","isTransferObject","recipient","objectRef","isSuiTransferSui","amount","isSuiChangeEpoch","epoch","storage_charge","computation_charge","isSuiTransactionKind","TransferObject","Publish","isMoveCall","Call","TransferSui","ChangeEpoch","isTransactionData","transactions","sender","gasPayment","gasBudget","isAuthorityQuorumSignInfo","signatures","isCertifiedTransaction","transactionDigest","txSignature","authSignInfo","isGasCostSummary","computationCost","storageCost","isExecutionStatusType","isExecutionStatus","isOwnedObjectRef","isTransactionEffects","gasUsed","sharedObjects","created","mutated","deleted","wrapped","gasObject","events","dependencies","isTransactionEffectsResponse","certificate","effects","timestamp_ms","isGetTxnDigestsResponse","typeArguments","arguments","isSuiJsonValue","isTransactionBytes","txBytes","gas","isMergeCoinResponse","updatedCoin","updatedGas","isSplitCoinResponse","newCoins","isPublishResponse","createdObjects","isSuiPackage","isTransactionResponse","EffectResponse","SplitCoinResponse","MergeCoinResponse","PublishResponse","isValidResponse","jsonrpc","id","LosslessJSON","require","JsonRpcClient","url","httpHeaders","rpcClient","createRpcClient","RpcClient","request","callback","body","headers","assign","fetch","res","text","JSON","stringify","parse","isLosslessNumber","valueOf","ok","statusText","_context","requestWithType","args","isT","response","message","_this","batchRequestWithType","requests","batchRequest","validResponses","filter","map","batch","params","_this2","isNumber","val","JsonRpcProvider","endpoint","client","getObjectsOwnedByAddress","address","getObjectsOwnedByObject","getObject","getObjectBatch","objectIds","getTransactionsForObject","objectID","results","getTransactionsForAddress","addressID","getTransactionWithEffects","getTransactionWithEffectsBatch","digests","d","list","join","substring","executeTransaction","txnBytes","pubkey","getTotalTransactionNumber","getTransactionDigestsInRange","start","end","getRecentTransactions","count","HexDataBuffer","_data","RpcTxnDataSerializer","newTransferObject","signerAddress","t","newMoveCall","packageObjectId","newMergeCoin","primaryCoin","coinToMerge","newSplitCoin","coinObjectId","splitAmounts","newPublish","compiledModules","VoidProvider","_address","newError","_objectId","getTransaction","_digest","_txnBytes","_signature","_pubkey","_start","_end","_count","operation","SignerWithProvider","provider","serializer","signAndExecuteTransaction","sig","pubKey","transferObject","transaction","getAddress","mergeCoin","splitCoin","executeMoveCall","publish","RawSigner","connect","VALID_BASE64_REGEX","isValidSuiAddress","test","isHex","getHexByteLength","getObjectExistsResponse","resp","getObjectDeletedResponse","getObjectNotExistsResponse","getObjectReference","getMoveObjectType","getMoveObject","_getMoveObject","getObjectFields","_getMoveObject2","suiObject","getExecutionStatus","getExecutionStatusGasSummary","getSplitCoinResponse","getMergeCoinResponse","Coin","isCoin","_getMoveObjectType","startsWith","getBalance","balance","_getObjectFields","getZero","_getMergeCoinResponse","_getSplitCoinResponse","_getSplitCoinResponse2","_getObjectReference","_getObjectExistsRespo4","_getObjectExistsRespo3","_getObjectExistsRespo2","_getObjectReference2","gasSummary","tx","_getMoveObject3"],"mappings":"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"}