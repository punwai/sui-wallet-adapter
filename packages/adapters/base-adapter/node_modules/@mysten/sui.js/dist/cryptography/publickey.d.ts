/// <reference types="node" />
import BN from 'bn.js';
import { Buffer } from 'buffer';
/**
 * Value to be converted into public key
 */
export declare type PublicKeyInitData = number | string | Buffer | Uint8Array | Array<number> | PublicKeyData;
/**
 * JSON object representation of PublicKey class
 */
export declare type PublicKeyData = {
    /** @internal */
    _bn: BN;
};
export declare const PUBLIC_KEY_SIZE = 32;
/**
 * A public key
 */
export declare class PublicKey {
    /** @internal */
    _bn: BN;
    /**
     * Create a new PublicKey object
     * @param value ed25519 public key as buffer or base-64 encoded string
     */
    constructor(value: PublicKeyInitData);
    /**
     * Checks if two publicKeys are equal
     */
    equals(publicKey: PublicKey): boolean;
    /**
     * Return the base-64 representation of the public key
     */
    toBase64(): string;
    /**
     * Return the byte array representation of the public key
     */
    toBytes(): Uint8Array;
    /**
     * Return the Buffer representation of the public key
     */
    toBuffer(): Buffer;
    /**
     * Return the base-64 representation of the public key
     */
    toString(): string;
    /**
     * Return the Sui address associated with this public key
     */
    toSuiAddress(): string;
}
